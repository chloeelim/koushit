// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  formDataBodySerializer,
  type Options,
  urlSearchParamsBodySerializer,
} from "./client";
import type {
  CreateFileFilesPostData,
  CreateFileFilesPostError,
  GetUserAuthSessionGetData,
  GetUserAuthSessionGetError,
  GetUserAuthSessionGetResponse,
  LogInAuthLoginPostData,
  LogInAuthLoginPostError,
  LogInAuthLoginPostResponse,
  LogoutAuthLogoutGetData,
  LogoutAuthLogoutGetError,
  SignUpAuthSignupPostData,
  SignUpAuthSignupPostError,
  SignUpAuthSignupPostResponse,
} from "./types.gen";

export const client = createClient(createConfig());

/**
 * Sign Up
 */
export const signUpAuthSignupPost = <ThrowOnError extends boolean = false>(
  options: Options<SignUpAuthSignupPostData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    SignUpAuthSignupPostResponse,
    SignUpAuthSignupPostError,
    ThrowOnError
  >({
    url: "/auth/signup",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * Log In
 */
export const logInAuthLoginPost = <ThrowOnError extends boolean = false>(
  options: Options<LogInAuthLoginPostData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    LogInAuthLoginPostResponse,
    LogInAuthLoginPostError,
    ThrowOnError
  >({
    ...urlSearchParamsBodySerializer,
    url: "/auth/login",
    ...options,
    headers: {
      "Content-Type": "application/x-www-form-urlencoded",
      ...options?.headers,
    },
  });
};

/**
 * Get User
 */
export const getUserAuthSessionGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetUserAuthSessionGetData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetUserAuthSessionGetResponse,
    GetUserAuthSessionGetError,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/auth/session",
    ...options,
  });
};

/**
 * Logout
 */
export const logoutAuthLogoutGet = <ThrowOnError extends boolean = false>(
  options?: Options<LogoutAuthLogoutGetData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    unknown,
    LogoutAuthLogoutGetError,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/auth/logout",
    ...options,
  });
};

/**
 * Create File
 */
export const createFileFilesPost = <ThrowOnError extends boolean = false>(
  options: Options<CreateFileFilesPostData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    unknown,
    CreateFileFilesPostError,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/files",
    ...options,
    headers: {
      "Content-Type": null,
      ...options?.headers,
    },
  });
};
